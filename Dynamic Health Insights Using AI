import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import numpy as np

# Define and train a simple neural network model
def create_model():
    model = Sequential([
        Dense(64, activation='relu', input_shape=(10,)),  # Assuming 10 features
        Dense(64, activation='relu'),
        Dense(1, activation='sigmoid')
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
    return model

# Example training data
X_train = np.random.rand(100, 10)  # 100 samples, 10 features
y_train = np.random.randint(2, size=100)  # Binary target

model = create_model()
model.fit(X_train, y_train, epochs=5)

# Predict and generate insights
def generate_health_insights(features):
    predictions = model.predict(np.array([features]))
    risk = 'High Risk' if predictions[0] > 0.5 else 'Low Risk'
    return risk

# Example user features
user_features = np.random.rand(10)
insight = generate_health_insights(user_features)
print(f"Health Insight: {insight}")
